
CREATE OR REPLACE TRIGGER INCREMENT_TOTAL_LOANS
AFTER INSERT ON LOANS
FOR EACH ROW
BEGIN
    UPDATE CLIENTS
    SET TOTAL_LOANS = TOTAL_LOANS + 1
    WHERE CLIENT_ID = :NEW.CLIENT_ID;
END;
/

CREATE OR REPLACE TRIGGER SET_DUE_DATE
BEFORE INSERT ON LOANS
FOR EACH ROW
BEGIN
    :NEW.DUE_DATE := :NEW.LOAN_DATE + 7;
END;
/


CREATE OR REPLACE TRIGGER UPDATE_LOAN_STATUS
BEFORE INSERT OR UPDATE ON LOANS
FOR EACH ROW
BEGIN
    IF (:NEW.RETURN_DATE IS NULL AND :NEW.DUE_DATE < SYSDATE) THEN
        :NEW.LOAN_STATUS := 'LATE';
    ELSIF (:NEW.RETURN_DATE IS NOT NULL) THEN
        :NEW.LOAN_STATUS := 'RETURNED';
    ELSE
        :NEW.LOAN_STATUS := 'OPEN';
    END IF;
END;
/


CREATE OR REPLACE TRIGGER GENERATE_FINE
AFTER UPDATE ON LOANS
FOR EACH ROW
WHEN (
    :NEW.RETURN_DATE IS NULL
    AND :NEW.DUE_DATE < SYSDATE
    AND :NEW.LOAN_STATUS = 'LATE'
)
BEGIN
    INSERT INTO FINES (FINE_ID, LOAN_ID, FINE_AMOUNT, FINE_DATE, FINE_STATUS)
    VALUES (
        FINE_SEQ.NEXTVAL,
        :NEW.LOAN_ID,
        10.00,
        SYSDATE,
        'PENDING'
    );
END;
/